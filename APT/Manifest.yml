apiVersion: v1
kind: Namespace
metadata:
  name: dogcompetitions

---
# ===== Persistent Volumes for MongoDBs =====
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dogdb-pvc
  namespace: dogcompetitions
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: persondb-pvc
  namespace: dogcompetitions
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: competitiondb-pvc
  namespace: dogcompetitions
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-history-pvc
  namespace: dogcompetitions
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 2Gi

# ===== dogdb =====
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dogdb
  namespace: dogcompetitions
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dogdb
  template:
    metadata:
      labels:
        app: dogdb
    spec:
      containers:
        - name: dogdb
          image: mongo:6.0
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: dogdb-storage
              mountPath: /data/db
      volumes:
        - name: dogdb-storage
          persistentVolumeClaim:
            claimName: dogdb-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: dogdb
  namespace: dogcompetitions
spec:
  selector:
    app: dogdb
  ports:
    - port: 27017
      targetPort: 27017

# ===== persondb =====
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: persondb
  namespace: dogcompetitions
spec:
  replicas: 1
  selector:
    matchLabels:
      app: persondb
  template:
    metadata:
      labels:
        app: persondb
    spec:
      containers:
        - name: persondb
          image: mongo:6.0
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: persondb-storage
              mountPath: /data/db
      volumes:
        - name: persondb-storage
          persistentVolumeClaim:
            claimName: persondb-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: persondb
  namespace: dogcompetitions
spec:
  selector:
    app: persondb
  ports:
    - port: 27017
      targetPort: 27017

# ===== competitiondb =====
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: competitiondb
  namespace: dogcompetitions
spec:
  replicas: 1
  selector:
    matchLabels:
      app: competitiondb
  template:
    metadata:
      labels:
        app: competitiondb
    spec:
      containers:
        - name: competitiondb
          image: mongo:6.0
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: competitiondb-storage
              mountPath: /data/db
      volumes:
        - name: competitiondb-storage
          persistentVolumeClaim:
            claimName: competitiondb-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: competitiondb
  namespace: dogcompetitions
spec:
  selector:
    app: competitiondb
  ports:
    - port: 27017
      targetPort: 27017

# ===== mysql-history =====
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-history
  namespace: dogcompetitions
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-history
  template:
    metadata:
      labels:
        app: mysql-history
    spec:
      containers:
        - name: mysql-history
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_USER
              value: "Test"
            - name: MYSQL_PASSWORD
              value: "Test@123"
            - name: MYSQL_DATABASE
              value: "historydb"
            - name: MYSQL_ROOT_PASSWORD
              value: "rootabc123"
          volumeMounts:
            - name: mysql-history-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-history-storage
          persistentVolumeClaim:
            claimName: mysql-history-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-history
  namespace: dogcompetitions
spec:
  selector:
    app: mysql-history
  ports:
    - port: 3306
      targetPort: 3306

# ===== dog-service =====
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dog-service
  namespace: dogcompetitions
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dog-service
  template:
    metadata:
      labels:
        app: dog-service
    spec:
      containers:
        - name: dog-service
          image: nelet/dog-service:latest
          ports:
            - containerPort: 8080
          env:
            - name: MONGODB_PORT
              value: "27017"
            - name: MONGODB_HOST
              value: "dogdb"
---
apiVersion: v1
kind: Service
metadata:
  name: dog-service
  namespace: dogcompetitions
spec:
  selector:
    app: dog-service
  ports:
    - port: 8081
      targetPort: 8080

# ===== person-service =====
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: person-service
  namespace: dogcompetitions
spec:
  replicas: 1
  selector:
    matchLabels:
      app: person-service
  template:
    metadata:
      labels:
        app: person-service
    spec:
      containers:
        - name: person-service
          image: nelet/person-service:latest
          ports:
            - containerPort: 8080
          env:
            - name: MONGODB_PORT
              value: "27017"
            - name: MONGODB_HOST
              value: "persondb"
---
apiVersion: v1
kind: Service
metadata:
  name: person-service
  namespace: dogcompetitions
spec:
  selector:
    app: person-service
  ports:
    - port: 8083
      targetPort: 8080

# ===== competition-service =====
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: competition-service
  namespace: dogcompetitions
spec:
  replicas: 1
  selector:
    matchLabels:
      app: competition-service
  template:
    metadata:
      labels:
        app: competition-service
    spec:
      containers:
        - name: competition-service
          image: nelet/competition-service:latest
          ports:
            - containerPort: 8080
          env:
            - name: MONGODB_PORT
              value: "27017"
            - name: MONGODB_HOST
              value: "competitiondb"
---
apiVersion: v1
kind: Service
metadata:
  name: competition-service
  namespace: dogcompetitions
spec:
  selector:
    app: competition-service
  ports:
    - port: 8084
      targetPort: 8080

# ===== history-service =====
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: history-service
  namespace: dogcompetitions
spec:
  replicas: 1
  selector:
    matchLabels:
      app: history-service
  template:
    metadata:
      labels:
        app: history-service
    spec:
      containers:
        - name: history-service
          image: nelet/history-service:latest
          ports:
            - containerPort: 8080
          env:
            - name: MYSQL_DB_HOST
              value: "mysql-history"
            - name: MYSQL_DB_PORT
              value: "3306"
            - name: MYSQL_DB_DATABASE
              value: "historydb"
            - name: MYSQL_DB_USER
              value: "root"
            - name: MYSQL_DB_PASSWORD
              value: "rootabc123"
            - name: DOG_SERVICE_BASEURL
              value: "dog-service:8080"
            - name: PERSON_SERVICE_BASEURL
              value: "person-service:8080"
            - name: COMPETITION_SERVICE_BASEURL
              value: "competition-service:8080"
---
apiVersion: v1
kind: Service
metadata:
  name: history-service
  namespace: dogcompetitions
spec:
  selector:
    app: history-service
  ports:
    - port: 8082
      targetPort: 8080

# ===== api-gateway =====
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: dogcompetitions
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: nelet/api-gateway:latest
          ports:
            - containerPort: 8080
          env:
            - name: DOG_SERVICE_BASEURL
              value: "dog-service:8080"
            - name: PERSON_SERVICE_BASEURL
              value: "person-service:8080"
            - name: COMPETITION_SERVICE_BASEURL
              value: "competition-service:8080"
            - name: HISTORY_SERVICE_BASEURL
              value: "history-service:8080"
            - name: GOOGLE_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: google-secrets
                  key: clientid
            - name: GOOGLE_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: google-secrets
                  key: clientsecret
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: dogcompetitions
spec:
  type: LoadBalancer
  selector:
    app: api-gateway
  ports:
    - port: 8080
      targetPort: 8080
